#!/bin/bash

#############################################################################################################################

SOURCES="$(find src -name "*.cpp")"
LANGUAGE_VERSION="gnu++23"

LINUX_ASSEMBLY_FOLDER="asm/linux"
LINUX_COMPILER="g++"
LINUX_COMPILE_FLAGS=""
LINUX_LINK_FLAGS=""
LINUX_WARNINGS=""
LINUX_LIBRARIES="-LWizardEngine/lib/linux -lWizardEngine -lNeoTypes++ -lSDL2 -lSDL2_image -lSDL2_mixer -lSDL2_ttf -lSDL2_net"
LINUX_BUILD_NAME="bin.out"
LINUX_BUILD_FOLDER="build"
LINUX_RUN_PREFIX=""
LINUX_RUN_SUFFIX=""

WINDOWS_ASSEMBLY_FOLDER="asm/windows"
WINDOWS_COMPILER="mingw64/bin/g++"
WINDOWS_COMPILE_FLAGS=""
WINDOWS_LINK_FLAGS="-mwindows"
WINDOWS_WARNINGS=""
WINDOWS_LIBRARIES="-LWizardEngine/lib/windows -lWizardEngine -lNeoTypes++ -lSDL2 -lSDL2_image -lSDL2_mixer -lSDL2_ttf -lSDL2_net"
WINDOWS_BUILD_NAME="bin.exe"
WINDOWS_BUILD_FOLDER="build"
WINDOWS_RUN_PREFIX=""
WINDOWS_RUN_SUFFIX=""

GIT_GREP_FILTER="\.cpp"
GIT_ASSEMBLY_FOLDER=${WINDOWS_ASSEMBLY_FOLDER}
GIT_COMPILER=${WINDOWS_COMPILER}
GIT_COMPILE_FLAGS=${WINDOWS_COMPILE_FLAGS}
GIT_LINK_FLAGS=${WINDOWS_LINK_FLAGS}
GIT_WARNINGS=${WINDOWS_WARNINGS}
GIT_LIBRARIES=${WINDOWS_LIBRARIES}
GIT_BUILD_NAME=${WINDOWS_BUILD_NAME}
GIT_BUILD_FOLDER=${WINDOWS_BUILD_FOLDER}
GIT_RUN_PREFIX=${WINDOWS_RUN_PREFIX}
GIT_RUN_SUFFIX=${WINDOWS_RUN_SUFFIX}

#############################################################################################################################

GREEN="\e[92m"
RED="\e[91m"
YELLOW="\e[93m"
BLUE="\e[94m"
MAGENTA="\e[95m"
ENDCOLOR="\e[0m"

if [[ -n ${1} && ${1} == "-l" ]] || [[ -n ${1} && ${1} == "--linux" ]]
then
    ls "${LINUX_ASSEMBLY_FOLDER}" &> /dev/null || mkdir "${LINUX_ASSEMBLY_FOLDER}"
    ls "${LINUX_BUILD_FOLDER}" &> /dev/null || mkdir "${LINUX_BUILD_FOLDER}"

    if ${LINUX_COMPILER} -m64 -std=${LANGUAGE_VERSION} -O3 ${LINUX_WARNINGS} ${LINUX_COMPILE_FLAGS} -S ${SOURCES}
    then
        echo -e "${YELLOW}Linux ${GREEN}compilation successful!${ENDCOLOR}"
        if [ "${LINUX_ASSEMBLY_FOLDER}" != "." ] && [ "${LINUX_ASSEMBLY_FOLDER}" != "./" ]
        then
            rm "${LINUX_ASSEMBLY_FOLDER}"/*.s &> /dev/null
        fi
        mv ./*.s "${LINUX_ASSEMBLY_FOLDER}" &> /dev/null
    else
        echo -e "${YELLOW}Linux ${RED}compilation failed!${ENDCOLOR}"
        rm ./*.s &> /dev/null
        exit 1
    fi

    if ${LINUX_COMPILER} ${LINUX_LINK_FLAGS} -o "${LINUX_BUILD_FOLDER}/${LINUX_BUILD_NAME}" "${LINUX_ASSEMBLY_FOLDER}"/*.s ${LINUX_LIBRARIES} -lm
    then
        echo -e "${YELLOW}Linux ${GREEN}linking successful!${ENDCOLOR}"
    else
        echo -e "${YELLOW}Linux ${RED}linking failed!${ENDCOLOR}"
        exit 1
    fi

    if cd "${LINUX_BUILD_FOLDER}" && ${LINUX_RUN_PREFIX} ./"${LINUX_BUILD_NAME}" ${LINUX_RUN_SUFFIX}
    then
        echo -e "${YELLOW}Linux ${GREEN}run successful!${ENDCOLOR}"
        exit 0
    else
        echo -e "${YELLOW}Linux ${RED}run failed!${ENDCOLOR}"
        exit 1
    fi
fi

if [[ -n ${1} && ${1} == "-w" ]] || [[ -n ${1} && ${1} == "--windows" ]]
then
    ls "${WINDOWS_ASSEMBLY_FOLDER}" &> /dev/null || mkdir "${WINDOWS_ASSEMBLY_FOLDER}"
    ls "${WINDOWS_BUILD_FOLDER}" &> /dev/null || mkdir "${WINDOWS_BUILD_FOLDER}"

    if ${WINDOWS_COMPILER} -m64 -std=${LANGUAGE_VERSION} -O3 ${WINDOWS_WARNINGS} ${WINDOWS_COMPILE_FLAGS} -S ${SOURCES}
    then
        echo -e "${BLUE}Windows ${GREEN}compilation successful!${ENDCOLOR}"
        if [ "${WINDOWS_ASSEMBLY_FOLDER}" != "." ] && [ "${WINDOWS_ASSEMBLY_FOLDER}" != "./" ]
        then
            rm "${WINDOWS_ASSEMBLY_FOLDER}"/*.s &> /dev/null
        fi
        mv ./*.s "${WINDOWS_ASSEMBLY_FOLDER}" &> /dev/null
    else
        echo -e "${BLUE}Windows ${RED}compilation failed!${ENDCOLOR}"
        rm ./*.s &> /dev/null
        exit 1
    fi

    if ${WINDOWS_COMPILER} ${WINDOWS_LINK_FLAGS} -o "${WINDOWS_BUILD_FOLDER}/${WINDOWS_BUILD_NAME}" "${WINDOWS_ASSEMBLY_FOLDER}"/*.s ${WINDOWS_LIBRARIES} -lm
    then
        echo -e "${BLUE}Windows ${GREEN}linking successful!${ENDCOLOR}"
    else
        echo -e "${BLUE}Windows ${RED}linking failed!${ENDCOLOR}"
        exit 1
    fi

    if cd "${WINDOWS_BUILD_FOLDER}" && ${WINDOWS_RUN_PREFIX} ./"${WINDOWS_BUILD_NAME}" ${WINDOWS_RUN_SUFFIX}
    then
        echo -e "${BLUE}Windows ${GREEN}run successful!${ENDCOLOR}"
        exit 0
    else
        echo -e "${BLUE}Windows ${RED}run failed!${ENDCOLOR}"
        exit 1
    fi
fi

if [[ -n ${1} && ${1} == "-g" ]] || [[ -n ${1} && ${1} == "--git" ]]
then
    ls "${GIT_ASSEMBLY_FOLDER}" &> /dev/null || mkdir "${GIT_ASSEMBLY_FOLDER}"
    ls "${GIT_BUILD_FOLDER}" &> /dev/null || mkdir "${GIT_BUILD_FOLDER}"

    if ${GIT_COMPILER} -m64 -std=${LANGUAGE_VERSION} -O3 ${GIT_WARNINGS} ${GIT_COMPILE_FLAGS} -S $(git diff --name-only | grep ${GIT_GREP_FILTER})
    then
        echo -e "${MAGENTA}Git ${GREEN}compilation successful!${ENDCOLOR}"
        mv ./*.s "${GIT_ASSEMBLY_FOLDER}" &> /dev/null
    else
        echo -e "${MAGENTA}Git ${RED}compilation failed!${ENDCOLOR}"
        rm ./*.s &> /dev/null
        exit 1
    fi

    if ${GIT_COMPILER} ${GIT_LINK_FLAGS} -o "${GIT_BUILD_FOLDER}/${GIT_BUILD_NAME}" "${GIT_ASSEMBLY_FOLDER}"/*.s ${GIT_LIBRARIES} -lm
    then
        echo -e "${MAGENTA}Git ${GREEN}linking successful!${ENDCOLOR}"
    else
        echo -e "${MAGENTA}Git ${RED}linking failed!${ENDCOLOR}"
        exit 1
    fi

    if cd "${GIT_BUILD_FOLDER}" && ${GIT_RUN_PREFIX} ./"${GIT_BUILD_NAME}" ${GIT_RUN_SUFFIX}
    then
        echo -e "${MAGENTA}Git ${GREEN}run successful!${ENDCOLOR}"
        exit 0
    else
        echo -e "${MAGENTA}Git ${RED}run failed!${ENDCOLOR}"
        exit 1
    fi
fi

echo -e "\nUsage: cbuild [options]\n\nOptions:\n  -h|--help\tDisplay help.\n  -l|--linux\tBuild for ${YELLOW}Linux${ENDCOLOR} (x86_64).\n  -w|--windows\tBuild for ${BLUE}Windows${ENDCOLOR} (x86_64).\n  -g|--git\tRapid build with ${MAGENTA}git${ENDCOLOR}.\n"
